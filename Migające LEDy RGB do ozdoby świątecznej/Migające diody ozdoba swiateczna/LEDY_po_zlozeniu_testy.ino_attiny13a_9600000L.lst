
C:\Users\Czikago\AppData\Local\Temp\arduino_build_407695/LEDY_po_zlozeniu_testy.ino.elf:     file format elf32-avr


Disassembly of section .text:

00000000 <__vectors>:
__vectors():
   0:	09 c0       	rjmp	.+18     	; 0x14 <__ctors_end>
   2:	23 c0       	rjmp	.+70     	; 0x4a <__bad_interrupt>
   4:	22 c0       	rjmp	.+68     	; 0x4a <__bad_interrupt>
   6:	21 c0       	rjmp	.+66     	; 0x4a <__bad_interrupt>
   8:	20 c0       	rjmp	.+64     	; 0x4a <__bad_interrupt>
   a:	1f c0       	rjmp	.+62     	; 0x4a <__bad_interrupt>
   c:	1e c0       	rjmp	.+60     	; 0x4a <__bad_interrupt>
   e:	1d c0       	rjmp	.+58     	; 0x4a <__bad_interrupt>
  10:	1c c0       	rjmp	.+56     	; 0x4a <__bad_interrupt>
  12:	1b c0       	rjmp	.+54     	; 0x4a <__bad_interrupt>

00000014 <__ctors_end>:
__trampolines_start():
  14:	11 24       	eor	r1, r1
  16:	1f be       	out	0x3f, r1	; 63
  18:	cf e9       	ldi	r28, 0x9F	; 159
  1a:	cd bf       	out	0x3d, r28	; 61
  1c:	01 d0       	rcall	.+2      	; 0x20 <main>
  1e:	16 c0       	rjmp	.+44     	; 0x4c <_exit>

00000020 <main>:
main():
C:\Users\Czikago\AppData\Local\Arduino15\packages\MicroCore\hardware\avr\2.0.3\cores\microcore/wiring_digital.c:27
 *        INPUT_PULLUP - set pin as input and enable internal pullup resistor
 */
void pinMode(uint8_t pin, uint8_t mode)
{
  if(mode == OUTPUT) // Pin as output
    DDRB |= _BV(pin);
  20:	bb 9a       	sbi	0x17, 3	; 23
pinMode():
  22:	bc 9a       	sbi	0x17, 4	; 23
  24:	b9 9a       	sbi	0x17, 1	; 23
  26:	ba 9a       	sbi	0x17, 2	; 23
  28:	b8 9a       	sbi	0x17, 0	; 23
digitalWrite():
C:\Users\Czikago\AppData\Local\Arduino15\packages\MicroCore\hardware\avr\2.0.3\cores\microcore/wiring_digital.c:49
void digitalWrite(uint8_t pin, uint8_t val)
{
  if(val)
    PORTB |= _BV(pin);  // Set pin high
  else
    PORTB &= ~_BV(pin); // Set pin low
  2a:	c0 98       	cbi	0x18, 0	; 24
  2c:	c1 98       	cbi	0x18, 1	; 24
  2e:	c2 98       	cbi	0x18, 2	; 24
C:\Users\Czikago\AppData\Local\Arduino15\packages\MicroCore\hardware\avr\2.0.3\cores\microcore/wiring_digital.c:47
 * @param val The state to set. Valid options are HIGH or LOW
 */
void digitalWrite(uint8_t pin, uint8_t val)
{
  if(val)
    PORTB |= _BV(pin);  // Set pin high
  30:	c3 9a       	sbi	0x18, 3	; 24
C:\Users\Czikago\AppData\Local\Arduino15\packages\MicroCore\hardware\avr\2.0.3\cores\microcore/wiring_digital.c:49
  else
    PORTB &= ~_BV(pin); // Set pin low
  32:	c4 98       	cbi	0x18, 4	; 24
  34:	85 ef       	ldi	r24, 0xF5	; 245
  36:	91 e0       	ldi	r25, 0x01	; 1
  38:	01 97       	sbiw	r24, 0x01	; 1
delay():
C:\Users\Czikago\AppData\Local\Arduino15\packages\MicroCore\hardware\avr\2.0.3\cores\microcore/wiring.c:138
 *
 * @param ms The number of milliseconds to pause
 */
void delay(uint16_t ms)
{
  while(ms--)
  3a:	b9 f3       	breq	.-18     	; 0x2a <main+0xa>
_delay_ms():
c:\users\czikago\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\util/delay.h:187
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  3c:	ef e5       	ldi	r30, 0x5F	; 95
  3e:	f9 e0       	ldi	r31, 0x09	; 9
  40:	31 97       	sbiw	r30, 0x01	; 1
  42:	f1 f7       	brne	.-4      	; 0x40 <__SREG__+0x1>
  44:	00 c0       	rjmp	.+0      	; 0x46 <__SREG__+0x7>
  46:	00 00       	nop
  48:	f7 cf       	rjmp	.-18     	; 0x38 <main+0x18>

0000004a <__bad_interrupt>:
__vector_1():
  4a:	da cf       	rjmp	.-76     	; 0x0 <__vectors>

0000004c <_exit>:
exit():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/tiny-stack/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:2278
  4c:	f8 94       	cli

0000004e <__stop_program>:
__stop_program():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/tiny-stack/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:2280
  4e:	ff cf       	rjmp	.-2      	; 0x4e <__stop_program>
